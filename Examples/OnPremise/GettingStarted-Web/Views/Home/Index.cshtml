@* *********************************************************************
 * This Original Work is copyright of 51 Degrees Mobile Experts Limited.
 * Copyright 2025 51 Degrees Mobile Experts Limited, Davidson House,
 * Forbury Square, Reading, Berkshire, United Kingdom RG1 3EU.
 *
 * This Original Work is licensed under the European Union Public Licence
 * (EUPL) v.1.2 and is subject to its terms as set out below.
 *
 * If a copy of the EUPL was not distributed with this file, You can obtain
 * one at https://opensource.org/licenses/EUPL-1.2.
 *
 * The 'Compatible Licences' set out in the Appendix to the EUPL (as may be
 * amended by the European Commission) shall be deemed incompatible for
 * the purposes of the Work and the provisions of the compatibility
 * clause in Article 5 of the EUPL shall not apply.
 *
 * If using the Work as, or as part of, a network application, by
 * including the attribution notice(s) required under Article 5 of the EUPL
 * in the end user terms of the application under an appropriate heading,
 * such notice(s) shall fulfill the requirements of that article.
 * ********************************************************************* *@

@using FiftyOne.IpIntelligence.Examples
@model FiftyOne.IpIntelligence.Examples.OnPremise.GettingStartedWeb.Model.IndexModel
@{
    ViewData["Title"] = "Web Integration Example";
}

<link rel="stylesheet" href="~/css/site.css" />

<h2>Web Integration Example</h2>

<p>
    This example demonstrates the use of the Pipeline API to perform device detection within a
    simple ASP.NET Core web project.
</p>

<noscript>
    <div class="example-alert">
        WARNING: JavaScript is disabled in your browser.
    </div>
</noscript>
@if (DateTime.UtcNow > Model.DataFile.DataPublishedDateTime
    .AddDays(ExampleUtils.DataFileAgeWarning))
{
    <div class="example-alert">
        WARNING: This example is using a data file that is more than 
        @ExampleUtils.DataFileAgeWarning days old. A more recent data file may be needed to 
        correctly perform detection. The latest lite data file is available 
        from the 
        <a href="https://github.com/51Degrees/ip-intelligence-data">ip-intelligence-data</a>
        repository on GitHub. Find out about the Enterprise data file, which includes automatic 
        daily updates, on our <a href="https://51degrees.com/pricing">pricing page</a>.
    </div>
}

<div id="content">
    <h3>Detection results</h3>
    <p>
        The following values are determined by sever-side device detection
        on the first request:
    </p>
    <table>
        <tr>
            <th>Key</th>
            <th>Value</th>
        </tr>
        <tr class="lightyellow"><td><b>Network Name:</b></td><td> @Model.Name</td></tr>
    </table>
    <br />

    <div id="evidence">
        <h3>Evidence used</h3>
        <p class="smaller">Evidence was <span class="lightgreen">used</span> / <span class="lightyellow">present</span> for detection</p>
        <table>
            <tr>
                <th>Key</th>
                <th>Value</th>
            </tr>
            @foreach (var entry in Model.Evidence)
            {
                <tr class="@(entry.Used ? "lightgreen" : "lightyellow")">
                    <td><b>@(entry.Key)</b></td>
                    <td>@(entry.Value)</td>
                </tr>
            }
        </table>
    </div>
    <br />

    <div id="response-headers">
        <h3>Response headers</h3>
        <table>
            <tr>
                <th>Key</th>
                <th>Value</th>
            </tr>
            @foreach (var entry in Model.ResponseHeaders)
            {
            <tr class="lightyellow">
                <td><b>@(entry.Key)</b></td>
                <td>@(entry.Value)</td>
            </tr>
            }
        </table>
    </div>
    <br />
    @if (Model.Engine.DataSourceTier == "Lite")
    {
    <div class="example-alert">
        WARNING: You are using the free 'Lite' data file. Find out about the Enterprise data file on our
        <a href="https://51degrees.com/pricing">pricing page</a>.
    </div>
    }
</div>

@* This View Component is embedded within the FiftyOne.Pipeline.Web package.
    it adds a JavaScript include for 51Degrees.core.js.
    The FiftyOne degrees middleware will intercept the request for this file and serve dynamically
    generated JavaScript, which includes a JSON representation of the contents of flow data.
    i.e. The results from device detection.

    In addition, this JavaScript will look for properties that have a flag set indicating that
    they contain executable script snippets.
    These snippets will be executed and the values they obtain will be sent back to the server
    in order for it to perform the detection process again with the new information.
    This callback will also include any User-Agent Client Hints headers that have been requested
    with the 'Accept-CH' header. (assuming the browser is willing to send them)

    When the server responds, the JSON representation of the results will be updated with the
    new values and the 'complete' event will fire.
    Below, we subscribe to this complete event and display the values from the updated JSON.
*@
@await Component.InvokeAsync("FiftyOneJS")
