//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace FiftyOne.IpIntelligence.Engine.OnPremise.Interop {

internal class ResultsIpiSwig : ResultsBaseSwig {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ResultsIpiSwig(global::System.IntPtr cPtr, bool cMemoryOwn) : base(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ResultsIpiSwig obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(ResultsIpiSwig obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          IpIntelligenceEngineModulePINVOKE.delete_ResultsIpiSwig(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public WeightedStringListValueSwig getValuesAsWeightedStringList(string propertyName) {
    WeightedStringListValueSwig ret = new WeightedStringListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedStringList__SWIG_0(swigCPtr, propertyName), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedStringListValueSwig getValuesAsWeightedStringList(int requiredPropertyIndex) {
    WeightedStringListValueSwig ret = new WeightedStringListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedStringList__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedUTF8StringListValueSwig getValuesAsWeightedUTF8StringList(string propertyName) {
    WeightedUTF8StringListValueSwig ret = new WeightedUTF8StringListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedUTF8StringList__SWIG_0(swigCPtr, propertyName), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedUTF8StringListValueSwig getValuesAsWeightedUTF8StringList(int requiredPropertyIndex) {
    WeightedUTF8StringListValueSwig ret = new WeightedUTF8StringListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedUTF8StringList__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedStringListValueSwig getValuesAsWeightedWKTStringList(string propertyName, byte decimalPlaces) {
    WeightedStringListValueSwig ret = new WeightedStringListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedWKTStringList__SWIG_0(swigCPtr, propertyName, decimalPlaces), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedStringListValueSwig getValuesAsWeightedWKTStringList(int requiredPropertyIndex, byte decimalPlaces) {
    WeightedStringListValueSwig ret = new WeightedStringListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedWKTStringList__SWIG_1(swigCPtr, requiredPropertyIndex, decimalPlaces), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedBoolListValueSwig getValuesAsWeightedBoolList(string propertyName) {
    WeightedBoolListValueSwig ret = new WeightedBoolListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedBoolList__SWIG_0(swigCPtr, propertyName), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedBoolListValueSwig getValuesAsWeightedBoolList(int requiredPropertyIndex) {
    WeightedBoolListValueSwig ret = new WeightedBoolListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedBoolList__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedIntListValueSwig getValuesAsWeightedIntegerList(string propertyName) {
    WeightedIntListValueSwig ret = new WeightedIntListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedIntegerList__SWIG_0(swigCPtr, propertyName), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedIntListValueSwig getValuesAsWeightedIntegerList(int requiredPropertyIndex) {
    WeightedIntListValueSwig ret = new WeightedIntListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedIntegerList__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedDoubleListValueSwig getValuesAsWeightedDoubleList(string propertyName) {
    WeightedDoubleListValueSwig ret = new WeightedDoubleListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedDoubleList__SWIG_0(swigCPtr, propertyName), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public WeightedDoubleListValueSwig getValuesAsWeightedDoubleList(int requiredPropertyIndex) {
    WeightedDoubleListValueSwig ret = new WeightedDoubleListValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValuesAsWeightedDoubleList__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IpAddressValueSwig getValueAsIpAddress(string propertyName) {
    IpAddressValueSwig ret = new IpAddressValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValueAsIpAddress__SWIG_0(swigCPtr, propertyName), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IpAddressValueSwig getValueAsIpAddress(int requiredPropertyIndex) {
    IpAddressValueSwig ret = new IpAddressValueSwig(IpIntelligenceEngineModulePINVOKE.ResultsIpiSwig_getValueAsIpAddress__SWIG_1(swigCPtr, requiredPropertyIndex), true);
    if (IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Pending) throw IpIntelligenceEngineModulePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
